---
layout: post
title: "A Reflection: My Cumulative Education at Iowa State University"
subtitle: "Part 2 of a 2 part series on my educational experiences at Iowa State University."
category: "blog"
author: "Jack Meyer"
---
<!-- Start Writing Below in Markdown -->
As my time at Iowa State comes to a close, I’ve taken some time to reflect on different aspects of my time here. In this post, I will reflect on my coursework, resources that I used to complete coursework, extra curricular activities, my work going forward, and changes I would make if I had to do my undergraduate degree again.

During my time at Iowa State, I feel like I have had ample experience learning how to design and implement engineering solutions to software problems. Through courses like Software Architecture, Object Oriented Analysis and Design, Software Practices, and other intro courses, I have had the opportunity to learn how to design a system and have also been given the tools to implement those designs. The ability to design and execute these system plans can be exemplified through projects I have made throughout my coursework. I also feel that the Software Engineering Curriculum has done a good job of understanding the ethics behind making a decision and what potential side effects could come about if an unethical decision is made. This topic is covered in many courses such as Project Management, Software Requirements, Senior Design, and our Portfolio course. As students, we have had the opportunity to view different ethical standards and do case studies on ethical scandals of the past. However, there is one area where I believe the curriculum is lacking. Unfortunately, there is a lack of conversation about how software solutions can be used to solve global or societal issues. Sometimes, there seems to be a lack of connection between what we do in the coursework and how it could be used to solve problems in the real world. If I could change one thing, it would be to have any semester long project based course take a real look at how their application or tool could be used to solve a problem in society. It doesn’t have to be an application to cure cancer or stop poverty, but it would be a huge benefit to the student if they were required to write a problem statement before each one of their projects.
Next, I feel like the Software Engineering Curriculum has done a great job preparing us to work in groups after we graduate. After the introduction to programming courses, most classes have some sort of group component to them. I enjoyed having to work in groups because I learned a lot from the teammates that I worked with and with more hands, we were able to create unique solutions to the problems we were trying to solve. Also, with working in groups, we were able to practice communicating with other teammates and other faculty members in a technical manner.  This helped me understand what being a professional in the field might be like. Also, in courses we also went through professional and ethical responsibilities and learned how to be a professional in the field while still in the class room. Once again though, I feel like the curriculum has lacked an overall bigger picture. Recognizing contemporary issues were never discussed and mechanisms to learn about some issues were never discussed, as well.
Throughout the course of my degree, I have used too many resources to list, so I’ll list some of the most influential ones.
* StackOverflow (of course)
* Devoxx (YouTube)
* Spring Tips (YouTube)
* Josh Long (Spring Advocate on the Spring team)
* My senior design group: Nischay Venketram, Nathan Karasch, Nathan De Graaf, Erica Clark
* Dozens and Dozens of random blogs

Through the Devoxx and Spring Tips youtube channels, I have been able to listen to many experts speak. The Devoxx YouTube channel has content ranging from setting up a DevOps workflow to Software Architecture to Machine Learning Topics. This has been a great resource for learning about new content to use in projects. The Spring Tips YouTube channel was important in learning about Spring Boot and Microservices, which I used in my Software Architecture project. Reading Josh Long's blog, following him on Twitter, and watching his conference talks also helped introduce me to Microservices and Spring Boot. My senior design team has taught me a lot, too. Things like a whole new programming paradigm, best practices in Node.js, how to manage and communicate with a team were learned through working with this teams.

Outside of coursework, I've had the opportunity to many different extracurricular activities which helped shape me as a future engineer.
* Iowa State Computer Science and Software Engieering Club (President during the 2016-2017 academic year)
* Iowa State Software Engineering Student Advisory Council (chair 2017-2018 academic year)
* Peer Mentor for the Software Engineering Learning Community (2016-2017 and 2017-2018 academic years)

These different groups were able to teach me things outside of class and show me how lifelong learning is important. I learned advanced topics in the CSE club and I was introduced to so many different tools and topics that simply could not be taught in class. Through the SE SAC, I was able to help facilitate change with the curriculum and program and hopefully make the Software Engineering program stronger in the future. Finally, as a peer mentor, I was able to help the next wave of programmers and engineers that are going to come through the SE Program.

Throughout the course of my degree, I have learned many things outside of class. I've leanred frameworks like Node.js, AngularJS, React, and Spring Boot. I've learned tools like Docker, TravisCI, Digital Ocean/Heroku/AWS. These skills have allowed me to take risks and start working on some larger projects for actual clients. I built an application that is used by a small business today. Without the knowledge gained outside of class, I would not have been able to complete this.

If I were to do my undergraduate degree over again, I would have been more focused my first semester. That was my worst semester as a college student and the only reason I did poorly because I was not focused. I also would worry less about scores and grades and more worried about a deep understanding of the material. Unfortunately, often times a deep understanding of the material won't get you a good grade on a homework/project because you are focused on getting the points and checking boxes rather than actually understanding the material. 
